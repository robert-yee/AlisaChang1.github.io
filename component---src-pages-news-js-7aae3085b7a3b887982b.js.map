{"version":3,"sources":["webpack:///./src/pages/News.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/Paranoia_logo_round.svg.png","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_2__","News","a","createElement","to","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","Header","siteTitle","react_default","style","marginBottom","src","Logo","alt","height","width","display","paddingLeft","paddingTop","color","gatsby_browser_entry","float","margin","maxWidth","padding","textDecoration","defaultProps","Layout","Fragment","header","site","siteMetadata","title","Date","getFullYear","href","_755544856","node"],"mappings":"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","file":"component---src-pages-news-js-7aae3085b7a3b887982b.js","sourcesContent":["import { Link } from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../components/layout\"\n\nconst News = () => (\n  <Layout>\n    <Link to=\"/\">Back to Home Page</Link>\n  </Layout>\n)\n\nexport default News\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/Paranoia_logo_round.svg-6da548bbd35d277c93cca5f363c22b2f.png\";","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Logo from \"../images/Paranoia_logo_round.svg.png\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <img\n      src={Logo}\n      alt=\"\"\n      height=\"50px\"\n      width=\"50px\"\n      style={{\n        display: \"inline-block\",\n        paddingLeft: \"100px\",\n        paddingTop: \"10px\",\n      }}\n    />\n\n    <h1\n      style={{\n        color: \"darkblue\",\n        paddingLeft: \"50px\",\n        paddingTop: \"40px\",\n        display: \"inline-block\",\n      }}\n    >\n      Oliver's Website\n    </h1>\n\n    <Link to=\"/MoreInformation/\">\n      <h3\n        style={{\n          float: \"right\",\n        }}\n      >\n        More Information{\" \"}\n      </h3>\n    </Link>\n\n    <Link to=\"/ContactUs/\">\n      <h3\n        style={{\n          float: \"right\",\n        }}\n      >\n        Contact Us\n      </h3>\n    </Link>\n\n    <Link to=\"/News/\">\n      <h3\n        style={{\n          float: \"right\",\n        }}\n      >\n        News\n      </h3>\n    </Link>\n\n    <Link to=\"/Jobs/\">\n      <h3\n        style={{\n          float: \"right\",\n        }}\n      >\n        Jobs\n      </h3>\n    </Link>\n\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `blue`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}