{"version":3,"sources":["webpack:///./src/pages/Resume.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/kiss-2928081_960_720.png","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","Jobs","a","createElement","title","keywords","to","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Header","siteTitle","react_default","style","marginBottom","gatsby_browser_entry","src","Logo","alt","height","width","display","paddingLeft","paddingTop","color","fontSize","fontFamily","margin","maxWidth","padding","Layout","Fragment","header","Date","getFullYear","_755544856","node"],"mappings":"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","file":"component---src-pages-resume-js-ce9ce481614b12a06e8c.js","sourcesContent":["import { Link } from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Jobs = () => (\n  <Layout>\n    <SEO title=\"Jobs\" keywords={[`gatsby`, `application`, `react`]} />\n    <Link to=\"/\">Back to Home Page</Link>\n  </Layout>\n)\n\nexport default Jobs\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/kiss-2928081_960_720-b1fba63caafed9614df386c609129679.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Logo from \"../images/kiss-2928081_960_720.png\"\n// import { relative } from \"path\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <Link to=\"/\">\n      <img\n        src={Logo}\n        alt=\"\"\n        style={{\n          height: \"70px\",\n          width: \"70px\",\n          display: \"inline-block\",\n          paddingLeft: \"100px\",\n          paddingTop: \"30px\",\n        }}\n      />\n    </Link>\n\n    <h1\n      style={{\n        color: \"red\",\n        paddingLeft: \"50px\",\n        paddingTop: \"40px\",\n        display: \"inline-block\",\n        fontSize: \"40px\",\n        fontFamily: \"cursive\",\n      }}\n    >\n      AChang\n    </h1>\n\n    <Link to=\"/AboutMe/\">\n      <h3>About Me </h3>\n    </Link>\n\n    <Link to=\"/Clothes/\">\n      <h3>Clothes</h3>\n    </Link>\n\n    <Link to=\"/Music/\">\n      <h3>Music</h3>\n    </Link>\n\n    <Link to=\"/Resume/\">\n      <h3>Resume</h3>\n    </Link>\n\n    <Link to=\"/Contact Me/\">\n      <h3>Contact Me</h3>\n    </Link>\n\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      {/* <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `blue`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1> */}\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer> Built by Alisa Chang, {new Date().getFullYear()}</footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}